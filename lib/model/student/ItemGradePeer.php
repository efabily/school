<?php


/**
 * Skeleton subclass for performing query and update operations on the 'sch_item_grade' table.
 *
 * 
 *
 * This class was autogenerated by Propel 1.4.2 on:
 *
 * Thu Nov 22 01:25:38 2012
 *
 * You should add additional methods to this class to meet the
 * application requirements.  This class will only be generated as
 * long as it does not already exist in the output directory.
 *
 * @package    lib.model.student
 */
class ItemGradePeer extends BaseItemGradePeer {

   public static function getItemGrade($item_id = null, $grade_id = null, $id_state = null)
   {
      $criteria = new Criteria();
      
      if($item_id)
      {
	 $criteria->add(self::ITEM_ID, $item_id);
      }
      
      if($grade_id)
      {
	 $criteria->add(self::GRADE_ID, $grade_id);
      }
      
      if($id_state)
      {
	 $criteria->add(self::ID_STATE, $id_state);
      }
      
      return self::doSelectOne($criteria);
   }
   
   public static function saveItemGrade($data, $item_grade = null,  $con = null)
   {
      if(!is_object($item_grade))
      {
	 $item_grade = new ItemGrade();
      }
      
      PropertySetter::set($item_grade, $data);
      
      $item_grade->save($con);
      
      return $item_grade;
   }
   
   public static function getItemGrades($item_id = null, $grade_id = null, $id_state = null)
   {
      $criteria = new Criteria();
      
      if($item_id)
      {
	 $criteria->add(self::ITEM_ID, $item_id);
      }
      
      if($grade_id)
      {
	 $criteria->add(self::GRADE_ID, $item_id);
      }
      
      if($id_state)
      {
	 $criteria->add(self::ID_STATE, $id_state);
      }
      
      return self::doSelect($criteria);
   }
   
   public static function getArrayItemGrade($item_id = null, $grade_id = null, $id_state = null)
   {
      $array = array();
      
      $item_grades = self::getItemGrades($item_id, $grade_id, $id_state);
      
      foreach ($item_grades  as $item_grade)
      {
	 $array[] =  $item_grade->getGradeId();
      }
      
      return $array;
   }
   
   
   public static function deleteByItem($item_id = null, $con = null)
   {
      $item_grades = self::getItemGrades($item_id, null, 2);
      
      foreach ($item_grades  as $item_grade)
      {
	 $item_grade->changeStateId(3, $con);
      }
   }
   
} // ItemGradePeer
