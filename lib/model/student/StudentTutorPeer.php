<?php


/**
 * Skeleton subclass for performing query and update operations on the 'sch_student_tutor' table.
 *
 * 
 *
 * This class was autogenerated by Propel 1.4.2 on:
 *
 * Wed Sep 12 01:53:16 2012
 *
 * You should add additional methods to this class to meet the
 * application requirements.  This class will only be generated as
 * long as it does not already exist in the output directory.
 *
 * @package    lib.model.student
 */
class StudentTutorPeer extends BaseStudentTutorPeer {

   /**
    *
    * @param Int $id_state
    * @param Int $student_id
    * @param Int $tutor_id
    * @param StudentTutor $student_tutor || null
    * @param PropelPDO $con
    * @return StudentTutor 
    */
   public static function saveStudentTutor($id_state, $student_id, $tutor_id, $student_tutor = null, $con = null)
   {
      if(!is_object($student_tutor))
      {
	 $student_tutor = new StudentTutor();	 
      }      
      
      $student_tutor->setIdState($id_state);
      $student_tutor->setStudentId($student_id);
      $student_tutor->setTutorId($tutor_id);
      $student_tutor->save($con);
      
      return $student_tutor;
   }
   
   public static function getStudentTutor($student_id = null, $type_tutor_id = null, $id_state = null)
   {
      $criteria = new Criteria();
      
      if($student_id)
      {
	 $criteria->add(self::STUDENT_ID, $student_id);
      }
      
      if($type_tutor_id)
      {
	 $criteria->addJoin(self::TUTOR_ID, TutorPeer::ID);
	 $criteria->add(TutorPeer::TYPE_TUTOR_ID, $type_tutor_id);
      }
      
      if($id_state)
      {
	 $criteria->add(self::ID_STATE, $id_state);
      }
      
      return self::doSelectOne($criteria);
   }
   
   public static function getOtherStudentTutor($student_id, $name_type_tutor = null)
   {
      $criteria = new Criteria();

      $criteria->add(self::STUDENT_ID, $student_id);

      $criteria->addJoin(self::TUTOR_ID, TutorPeer::ID);
      $criteria->add(TutorPeer::TYPE_TUTOR_ID, 1, Criteria::GREATER_THAN);
      
      if($name_type_tutor)
      {
	 $criteria->addJoin(TutorPeer::TYPE_TUTOR_ID, TypeTutorPeer::ID);
	 $criteria->add(TypeTutorPeer::NAME, $name_type_tutor);
      }
            
      $criteria->addDescendingOrderByColumn(self::ID);
      
      return self::doSelectOne($criteria);
   }
   
} // StudentTutorPeer
