<?php


/**
 * Skeleton subclass for representing a row from the 'sch_discount_contract' table.
 *
 * 
 *
 * This class was autogenerated by Propel 1.4.2 on:
 *
 * Thu Nov 22 00:54:53 2012
 *
 * You should add additional methods to this class to meet the
 * application requirements.  This class will only be generated as
 * long as it does not already exist in the output directory.
 *
 * @package    lib.model.student
 */
class DiscountContract extends BaseDiscountContract {

   
   function updateSales($add = null, $con = null)
   {
	 $item_for_sales = ItemForSalePeer::getItemForSaleByContract($this->getContractId());
	 
	 foreach ($item_for_sales as $item_for_sale)
	 {
	    $discount_amount = 0;
	    $discount_name = '';
	    $item_for_sale->setDiscountname($discount_name);
	    $item_for_sale->setDiscount($discount_amount);
	    $item_for_sale->save($con);
	    
	    if($add)
	    {
	       // Verifico si el item soporta este descuento
	       $discount_item = DiscountItemPeer::getDiscountByItem($item_for_sale->getItemId(), $this->getDiscountId(), 2);

	       if(is_object($discount_item))
	       {
		  if(!$item_for_sale->getSales()->getPaymentsHave())
		  {
		     $discount_name = $this->getDiscount()->getName().' ('.$this->getDiscount()->getDiscount().' %)';
		     $discount_amount = (($item_for_sale->getSales()->getSaldoByDeposit() * $this->getDiscount()->getDiscount()) / 100);
		  }
	       }	       
	    }
	    
	    if(!$item_for_sale->getSales()->getPaymentsHave())
	    {
	       $item_for_sale->setDiscountname($discount_name);
	       $item_for_sale->setDiscount($discount_amount);
	       $item_for_sale->save($con);
	    }	    
	 }
   }
     
} // DiscountContract
