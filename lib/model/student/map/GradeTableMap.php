<?php


/**
 * This class defines the structure of the 'sch_grade' table.
 *
 *
 * This class was autogenerated by Propel 1.4.2 on:
 *
 * Sun Jan 20 11:49:12 2013
 *
 *
 * This map class is used by Propel to do runtime db structure discovery.
 * For example, the createSelectSql() method checks the type of a given column used in an
 * ORDER BY clause to know whether it needs to apply SQL to make the ORDER BY case-insensitive
 * (i.e. if it's a text column type).
 *
 * @package    lib.model.student.map
 */
class GradeTableMap extends TableMap {

	/**
	 * The (dot-path) name of this class
	 */
	const CLASS_NAME = 'lib.model.student.map.GradeTableMap';

	/**
	 * Initialize the table attributes, columns and validators
	 * Relations are not initialized by this method since they are lazy loaded
	 *
	 * @return     void
	 * @throws     PropelException
	 */
	public function initialize()
	{
	  // attributes
		$this->setName('sch_grade');
		$this->setPhpName('Grade');
		$this->setClassname('Grade');
		$this->setPackage('lib.model.student');
		$this->setUseIdGenerator(true);
		// columns
		$this->addPrimaryKey('ID', 'Id', 'INTEGER', true, null, null);
		$this->addColumn('ID_STATE', 'IdState', 'INTEGER', true, null, null);
		$this->addColumn('NAME', 'Name', 'VARCHAR', true, 100, null);
		$this->addColumn('DESCRIPTION', 'Description', 'LONGVARCHAR', true, null, null);
		$this->addColumn('DELETED_BY', 'DeletedBy', 'INTEGER', false, null, null);
		$this->addColumn('CREATED_AT', 'CreatedAt', 'TIMESTAMP', false, null, null);
		$this->addColumn('UPDATED_AT', 'UpdatedAt', 'TIMESTAMP', false, null, null);
		$this->addForeignKey('DEGREE_ID', 'DegreeId', 'INTEGER', 'sch_degree', 'ID', true, null, null);
		$this->addForeignKey('TIMETABLE_ID', 'TimetableId', 'INTEGER', 'sch_timetable', 'ID', true, null, null);
		$this->addForeignKey('CURSO_ID', 'CursoId', 'INTEGER', 'sch_curso', 'ID', true, null, null);
		$this->addForeignKey('PARALELO_ID', 'ParaleloId', 'INTEGER', 'sch_paralelo', 'ID', true, null, null);
		// validators
	} // initialize()

	/**
	 * Build the RelationMap objects for this table relationships
	 */
	public function buildRelations()
	{
    $this->addRelation('Degree', 'Degree', RelationMap::MANY_TO_ONE, array('degree_id' => 'id', ), 'CASCADE', 'RESTRICT');
    $this->addRelation('Timetable', 'Timetable', RelationMap::MANY_TO_ONE, array('timetable_id' => 'id', ), 'CASCADE', 'RESTRICT');
    $this->addRelation('Curso', 'Curso', RelationMap::MANY_TO_ONE, array('curso_id' => 'id', ), 'CASCADE', 'RESTRICT');
    $this->addRelation('Paralelo', 'Paralelo', RelationMap::MANY_TO_ONE, array('paralelo_id' => 'id', ), 'CASCADE', 'RESTRICT');
    $this->addRelation('GradeSubject', 'GradeSubject', RelationMap::ONE_TO_MANY, array('id' => 'grade_id', ), 'CASCADE', 'RESTRICT');
    $this->addRelation('ItemGrade', 'ItemGrade', RelationMap::ONE_TO_MANY, array('id' => 'grade_id', ), 'CASCADE', 'RESTRICT');
    $this->addRelation('ContractGrade', 'ContractGrade', RelationMap::ONE_TO_MANY, array('id' => 'grade_id', ), 'CASCADE', 'RESTRICT');
	} // buildRelations()

	/**
	 * 
	 * Gets the list of behaviors registered for this table
	 * 
	 * @return array Associative array (name => parameters) of behaviors
	 */
	public function getBehaviors()
	{
		return array(
			'symfony' => array('form' => 'true', 'filter' => 'true', ),
			'symfony_behaviors' => array(),
			'symfony_timestampable' => array('create_column' => 'created_at', 'update_column' => 'updated_at', ),
		);
	} // getBehaviors()

} // GradeTableMap
