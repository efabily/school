<?php


/**
 * Skeleton subclass for performing query and update operations on the 'sch_receipt' table.
 *
 * 
 *
 * This class was autogenerated by Propel 1.4.2 on:
 *
 * Fri Sep 28 00:21:36 2012
 *
 * You should add additional methods to this class to meet the
 * application requirements.  This class will only be generated as
 * long as it does not already exist in the output directory.
 *
 * @package    lib.model.student
 */
class ReceiptPeer extends BaseReceiptPeer {

//   public static function saveReceipt($total, $night_audit_id, $discount, $comment, $receipt = null, $con = null)
//   {
//      if(!is_object($receipt))
//      {
//	 $receipt = new Receipt();	 
//      }
//      
//      $receipt->setTotal($total);
//      $receipt->setTotalNet($total);
//      $receipt->setNightAuditId($night_audit_id);
//      $receipt->setDiscount($discount);
//      $receipt->setComment($comment);
//      $receipt->save($con);
//      
//      return $receipt;      
//   }
   
   
   public static function saveReceipt($data, $receipt = null,  $con = null)
   {
      if(!is_object($receipt))
      {
	 $receipt = new Receipt();
      }
      
      PropertySetter::set($receipt, $data);
      
      $receipt->save($con);
      
      return $receipt;
   }
   
   
   public static function getReceiptByContract($contract_id)
   {
      $criteria = new Criteria();      
      $criteria->addJoin(self::ID, MovementCashboxReceiptPeer::RECEIPT_ID);
      $criteria->addJoin(MovementCashboxReceiptPeer::MOVEMENT_CASHBOX_ID, MovementCashboxPeer::ID);
      $criteria->addJoin(MovementCashboxPeer::ID, MovementCashboxDepositPeer::MOVEMENT_CASHBOX_ID);
      $criteria->addJoin(MovementCashboxDepositPeer::DEPOSIT_ID, DepositPeer::ID);
      $criteria->addJoin(DepositPeer::ID, AccountDepositPeer::DEPOSIT_ID);
      $criteria->addJoin(AccountDepositPeer::ACCOUNT_ID, AccountPeer::ID);
      
      $criteria->add(AccountPeer::CONTRACT_ID, $contract_id);
      
      $criteria->addGroupByColumn(self::ID);
            
      return self::doSelect($criteria);
   }
   
} // ReceiptPeer
