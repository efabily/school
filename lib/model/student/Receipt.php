<?php


/**
 * Skeleton subclass for representing a row from the 'sch_receipt' table.
 *
 * 
 *
 * This class was autogenerated by Propel 1.4.2 on:
 *
 * Fri Sep 28 00:21:36 2012
 *
 * You should add additional methods to this class to meet the
 * application requirements.  This class will only be generated as
 * long as it does not already exist in the output directory.
 *
 * @package    lib.model.student
 */
class Receipt extends BaseReceipt {

   public function getItemForSaleForReceiptDeposit()
   {
      $array_item = array();
      
      $item_for_sales = ItemForSalePeer::getItemForSaleByReceipt($this->getId());
      
      foreach ($item_for_sales as $item_for_sale)
      {
	 $sales_deposit = SalesDepositPeer::getSalesDepositByReceipt($this->getId(), $item_for_sale->getSalesId());
	 
	 $array_item[$item_for_sale->getId()] = array('name' => $item_for_sale->getItem()->getName().' ('.$item_for_sale->getSales()->getNameSalesAccount().')', 'amount' => $sales_deposit->getAmount());
      }
      
      return $array_item;
   }
   
   public function getItemForSaleBySellDirect()
   {
      $array_item = array();
      
      $item_for_sales = ItemForSalePeer::getItemForSaleBySellDirect($this->getId());
      
      foreach ($item_for_sales as $item_for_sale)
      {
	 $array_item[$item_for_sale->getId()] = array('name' => $item_for_sale->getItem()->getName(), 'amount' => $item_for_sale->getTotalPriceDiscount());
      }
      
      return $array_item;
   }
   
   public function getArrAdditionalInformation() {
      
      $array_additional_information = array();
      $additional_information = $this->getAdditionalInformation();
      if(!empty($additional_information))
      {
	$array_additional_information = json_decode($additional_information, 1);
      }
      
      return $array_additional_information;
   }
   
   public function getSaldoMensualidadAdeudada()
   {
      $ai = 0;
      
      $arr = $this->getArrAdditionalInformation();
      
      if(is_array($arr) && isset($arr['saldo_mensualidad_adeudada']))
      {
	 $ai = $arr['saldo_mensualidad_adeudada'];
      }
      return $ai;
   }
   
   public function getCantidadCuotasVencidas()
   {
      $ai = '';
      
      $arr = $this->getArrAdditionalInformation();
      
      if(is_array($arr) && isset($arr['cantidad_cuotas_vencidas']))
      {
	 $ai = $arr['cantidad_cuotas_vencidas'];
      }
      
      return $ai;
   }
   
   public function getProximoVenciento()
   {
      $ai = '';
      
      $arr = $this->getArrAdditionalInformation();
      
      if(is_array($arr) && isset($arr['proximo_venciento']))
      {
	 $ai = $arr['proximo_venciento'];
      }
      
      return $ai;
   }
   
} // Receipt