<?php


/**
 * Skeleton subclass for performing query and update operations on the 'sch_tutor' table.
 *
 * 
 *
 * This class was autogenerated by Propel 1.4.2 on:
 *
 * Tue Sep  4 00:14:38 2012
 *
 * You should add additional methods to this class to meet the
 * application requirements.  This class will only be generated as
 * long as it does not already exist in the output directory.
 *
 * @package    lib.model.student
 */
class TutorPeer extends BaseTutorPeer {

   /**         
    * 
    * @param Int $id_state
    * @param String $first_name
    * @param String $last_name
    * @param String $ci
    * @param String $languaje
    * @param String $occupation
    * @param String $degree
    * @param String $email 
    * @param Int $type_tutor_id
    * @param Int $person_id
    * @param Tutor $tutor || null
    * @param PropelPDO $con
    * @return Tutor 
    * 
    */
   public static function saveTutor($id_state, $first_name, $father_name, $mother_name, $ci, $languaje, $occupation, $degree, $email, $type_tutor_id, $person_id, $tutor = null, $con = null)
   {
      if(!is_object($tutor))
      {
	 $tutor = new Tutor();	 
      }
      
      $tutor->setIdState($id_state);
      $tutor->setFirstName($first_name);      
      $tutor->setFatherName($father_name);
      $tutor->setMotherName($mother_name);
      $tutor->setCi($ci);
      $tutor->setLanguaje($languaje);
      $tutor->setOccupation($occupation);
      $tutor->setDegree($degree);
      $tutor->setEmail($email);
      $tutor->setTypeTutorId($type_tutor_id);
      $tutor->setPersonId($person_id);
      $tutor->save($con);
      
      return $tutor;
   }
   
   public static function getTutor($student_id, $type_tutor_id = null, $type_tutor_id_mayor = null, $ci = null)
   {
      $criteria = new Criteria();
      $criteria->addJoin(self::ID, StudentTutorPeer::TUTOR_ID);
      $criteria->add(StudentTutorPeer::STUDENT_ID, $student_id);
      
      if($type_tutor_id)
      {
	 $criteria->add(self::TYPE_TUTOR_ID, $type_tutor_id);
      }
      
      if($ci)
      {
	 $criteria->add(self::CI, $ci);
      }
      
      
      if($type_tutor_id_mayor)
      {
	 $criteria->add(self::TYPE_TUTOR_ID, $type_tutor_id_mayor, Criteria::GREATER_THAN);	 
      }
      
      
      return self::doSelectOne($criteria);
   }
   
   public static function getTutors($contract_id)
   {
      $criteria = new Criteria();
      $criteria->addJoin(self::ID, StudentTutorPeer::TUTOR_ID);
      $criteria->addJoin(StudentTutorPeer::STUDENT_ID, StudentPeer::ID);
      $criteria->addJoin(StudentPeer::ID, ContractPeer::STUDENT_ID);
      
      $criteria->add(ContractPeer::ID, $contract_id);
      
      return self::doSelect($criteria);
      
   }
   
} // TutorPeer
